

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 13 12:00:41 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F628A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  0092                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009F                     	;# 
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  008C                     	;# 
   114  008E                     	;# 
   115  0092                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009F                     	;# 
   123                           
   124                           	psect	idataBANK0
   125  0745                     __pidataBANK0:	
   126                           
   127                           ;initializer for _randx
   128  0745  3401               	retlw	1
   129  0746  3400               	retlw	0
   130  0747  3400               	retlw	0
   131  0748  3400               	retlw	0
   132                           
   133                           	psect	nvBANK0
   134  002E                     __pnvBANK0:	
   135  002E                     _numbers:	
   136  002E                     	ds	2
   137  0006                     _PORTB	set	6
   138  001F                     _CMCON	set	31
   139  0086                     _TRISB	set	134
   140                           
   141                           ; #config settings
   142  0000                     
   143                           	psect	cinit
   144  07F6                     start_initialization:	
   145  07F6                     __initialization:	
   146                           
   147                           ; Initialize objects allocated to BANK0
   148  07F6  2745               	fcall	__pidataBANK0	;fetch initializer
   149  07F7  00AA               	movwf	__pdataBANK0& (0+127)
   150  07F8  2746               	fcall	__pidataBANK0+1	;fetch initializer
   151  07F9  00AB               	movwf	(__pdataBANK0+1)& (0+127)
   152  07FA  2747               	fcall	__pidataBANK0+2	;fetch initializer
   153  07FB  00AC               	movwf	(__pdataBANK0+2)& (0+127)
   154  07FC  2748               	fcall	__pidataBANK0+3	;fetch initializer
   155  07FD  00AD               	movwf	(__pdataBANK0+3)& (0+127)
   156  07FE                     end_of_initialization:	
   157                           ;End of C runtime variable initialization code
   158                           
   159  07FE                     __end_of__initialization:	
   160  07FE  0183               	clrf	3
   161  07FF  2F49               	ljmp	_main	;jump to C main() function
   162                           
   163                           	psect	dataBANK0
   164  002A                     __pdataBANK0:	
   165  002A                     _randx:	
   166  002A                     	ds	4
   167                           
   168                           	psect	cstackCOMMON
   169  0070                     __pcstackCOMMON:	
   170  0070                     ?_main:	
   171  0070                     ?___lmul:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ___lmul@multiplier:	
   175                           ; 4 bytes @ 0x0
   176                           
   177                           
   178                           ; 4 bytes @ 0x0
   179  0070                     	ds	4
   180  0074                     ___lmul@multiplicand:	
   181                           
   182                           ; 4 bytes @ 0x4
   183  0074                     	ds	4
   184  0078                     ??___lmul:	
   185                           
   186                           ; 1 bytes @ 0x8
   187  0078                     	ds	1
   188  0079                     ___lmul@product:	
   189                           
   190                           ; 4 bytes @ 0x9
   191  0079                     	ds	4
   192                           
   193                           	psect	cstackBANK0
   194  0020                     __pcstackBANK0:	
   195  0020                     ?_rand:	
   196                           
   197                           ; 2 bytes @ 0x0
   198  0020                     	ds	2
   199  0022                     ??_rand:	
   200                           
   201                           ; 1 bytes @ 0x2
   202  0022                     	ds	5
   203  0027                     ??_main:	
   204                           
   205                           ; 1 bytes @ 0x7
   206  0027                     	ds	3
   207                           
   208                           	psect	maintext
   209  0749                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 25 in file "A9.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   229 ;;      Params:         0       0       0       0
   230 ;;      Locals:         0       0       0       0
   231 ;;      Temps:          0       3       0       0
   232 ;;      Totals:         0       3       0       0
   233 ;;Total ram usage:        3 bytes
   234 ;; Hardware stack levels required when called:    2
   235 ;; This function calls:
   236 ;;		_rand
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           
   243                           ;psect for function _main
   244  0749                     _main:	
   245  0749                     l676:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   248                           
   249  0749  3007               	movlw	7
   250  074A  1283               	bcf	3,5	;RP0=0, select bank0
   251  074B  1303               	bcf	3,6	;RP1=0, select bank0
   252  074C  009F               	movwf	31	;volatile
   253  074D                     l678:	
   254  074D  1683               	bsf	3,5	;RP0=1, select bank1
   255  074E  1303               	bcf	3,6	;RP1=0, select bank1
   256  074F  0186               	clrf	6	;volatile
   257  0750                     l680:	
   258  0750  1283               	bcf	3,5	;RP0=0, select bank0
   259  0751  1303               	bcf	3,6	;RP1=0, select bank0
   260  0752  0186               	clrf	6	;volatile
   261  0753                     l682:	
   262  0753  276D               	fcall	_rand
   263  0754  1283               	bcf	3,5	;RP0=0, select bank0
   264  0755  1303               	bcf	3,6	;RP1=0, select bank0
   265  0756  0821               	movf	?_rand+1,w
   266  0757  00AF               	movwf	_numbers+1
   267  0758  0820               	movf	?_rand,w
   268  0759  00AE               	movwf	_numbers
   269  075A                     l684:	
   270  075A  082E               	movf	_numbers,w
   271  075B  0086               	movwf	6	;volatile
   272  075C                     l686:	
   273  075C  3003               	movlw	3
   274  075D  1283               	bcf	3,5	;RP0=0, select bank0
   275  075E  1303               	bcf	3,6	;RP1=0, select bank0
   276  075F  00A9               	movwf	??_main+2
   277  0760  308A               	movlw	138
   278  0761  00A8               	movwf	??_main+1
   279  0762  3055               	movlw	85
   280  0763  00A7               	movwf	??_main
   281  0764                     u137:	
   282  0764  0BA7               	decfsz	??_main,f
   283  0765  2F64               	goto	u137
   284  0766  0BA8               	decfsz	??_main+1,f
   285  0767  2F64               	goto	u137
   286  0768  0BA9               	decfsz	??_main+2,f
   287  0769  2F64               	goto	u137
   288  076A  0000               	nop
   289  076B  2F53               	goto	l682
   290  076C  2800               	ljmp	start
   291  076D                     __end_of_main:	
   292                           
   293                           	psect	text1
   294  076D                     __ptext1:	
   295 ;; *************** function _rand *****************
   296 ;; Defined at:
   297 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  2    0[BANK0 ] int 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, pclath, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   311 ;;      Params:         0       2       0       0
   312 ;;      Locals:         0       0       0       0
   313 ;;      Temps:          0       5       0       0
   314 ;;      Totals:         0       7       0       0
   315 ;;Total ram usage:        7 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    1
   318 ;; This function calls:
   319 ;;		___lmul
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _rand
   327  076D                     _rand:	
   328  076D                     l668:	
   329                           ;incstack = 0
   330                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
   331                           
   332  076D  1283               	bcf	3,5	;RP0=0, select bank0
   333  076E  1303               	bcf	3,6	;RP1=0, select bank0
   334  076F  082D               	movf	_randx+3,w
   335  0770  00F3               	movwf	___lmul@multiplier+3
   336  0771  082C               	movf	_randx+2,w
   337  0772  00F2               	movwf	___lmul@multiplier+2
   338  0773  082B               	movf	_randx+1,w
   339  0774  00F1               	movwf	___lmul@multiplier+1
   340  0775  082A               	movf	_randx,w
   341  0776  00F0               	movwf	___lmul@multiplier
   342  0777  3041               	movlw	65
   343  0778  00F7               	movwf	___lmul@multiplicand+3
   344  0779  30C6               	movlw	198
   345  077A  00F6               	movwf	___lmul@multiplicand+2
   346  077B  304E               	movlw	78
   347  077C  00F5               	movwf	___lmul@multiplicand+1
   348  077D  306D               	movlw	109
   349  077E  00F4               	movwf	___lmul@multiplicand
   350  077F  27B0               	fcall	___lmul
   351  0780  0873               	movf	?___lmul+3,w
   352  0781  1283               	bcf	3,5	;RP0=0, select bank0
   353  0782  1303               	bcf	3,6	;RP1=0, select bank0
   354  0783  00AD               	movwf	_randx+3
   355  0784  0872               	movf	?___lmul+2,w
   356  0785  00AC               	movwf	_randx+2
   357  0786  0871               	movf	?___lmul+1,w
   358  0787  00AB               	movwf	_randx+1
   359  0788  0870               	movf	?___lmul,w
   360  0789  00AA               	movwf	_randx
   361  078A                     l670:	
   362  078A  3039               	movlw	57
   363  078B  07AA               	addwf	_randx,f
   364  078C  3030               	movlw	48
   365  078D  1803               	skipnc
   366  078E  3031               	movlw	49
   367  078F  07AB               	addwf	_randx+1,f
   368  0790  3000               	movlw	0
   369  0791  1803               	skipnc
   370  0792  3001               	movlw	1
   371  0793  07AC               	addwf	_randx+2,f
   372  0794  3000               	movlw	0
   373  0795  1803               	skipnc
   374  0796  3001               	movlw	1
   375  0797  07AD               	addwf	_randx+3,f
   376  0798                     l672:	
   377  0798  082A               	movf	_randx,w
   378  0799  00A2               	movwf	??_rand
   379  079A  082B               	movf	_randx+1,w
   380  079B  00A3               	movwf	??_rand+1
   381  079C  082C               	movf	_randx+2,w
   382  079D  00A4               	movwf	??_rand+2
   383  079E  082D               	movf	_randx+3,w
   384  079F  00A5               	movwf	??_rand+3
   385  07A0  3010               	movlw	16
   386  07A1  00A6               	movwf	??_rand+4
   387  07A2                     u125:	
   388  07A2  0D25               	rlf	??_rand+3,w
   389  07A3  0CA5               	rrf	??_rand+3,f
   390  07A4  0CA4               	rrf	??_rand+2,f
   391  07A5  0CA3               	rrf	??_rand+1,f
   392  07A6  0CA2               	rrf	??_rand,f
   393  07A7                     u120:	
   394  07A7  0BA6               	decfsz	??_rand+4,f
   395  07A8  2FA2               	goto	u125
   396  07A9  30FF               	movlw	255
   397  07AA  0522               	andwf	??_rand,w
   398  07AB  00A0               	movwf	?_rand
   399  07AC  307F               	movlw	127
   400  07AD  0523               	andwf	??_rand+1,w
   401  07AE  00A1               	movwf	?_rand+1
   402  07AF                     l556:	
   403  07AF  0008               	return
   404  07B0                     __end_of_rand:	
   405                           
   406                           	psect	text2
   407  07B0                     __ptext2:	
   408 ;; *************** function ___lmul *****************
   409 ;; Defined at:
   410 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  multiplier      4    0[COMMON] unsigned long 
   413 ;;  multiplicand    4    4[COMMON] unsigned long 
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  product         4    9[COMMON] unsigned long 
   416 ;; Return value:  Size  Location     Type
   417 ;;                  4    0[COMMON] unsigned long 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   425 ;;      Params:         8       0       0       0
   426 ;;      Locals:         4       0       0       0
   427 ;;      Temps:          1       0       0       0
   428 ;;      Totals:        13       0       0       0
   429 ;;Total ram usage:       13 bytes
   430 ;; Hardware stack levels used:    1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		_rand
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function ___lmul
   440  07B0                     ___lmul:	
   441  07B0                     l654:	
   442                           ;incstack = 0
   443                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   444                           
   445  07B0  3000               	movlw	0
   446  07B1  00FC               	movwf	___lmul@product+3
   447  07B2  3000               	movlw	0
   448  07B3  00FB               	movwf	___lmul@product+2
   449  07B4  3000               	movlw	0
   450  07B5  00FA               	movwf	___lmul@product+1
   451  07B6  3000               	movlw	0
   452  07B7  00F9               	movwf	___lmul@product
   453  07B8                     l656:	
   454  07B8  1C70               	btfss	___lmul@multiplier,0
   455  07B9  2FBB               	goto	u71
   456  07BA  2FBC               	goto	u70
   457  07BB                     u71:	
   458  07BB  2FD3               	goto	l660
   459  07BC                     u70:	
   460  07BC                     l658:	
   461  07BC  0874               	movf	___lmul@multiplicand,w
   462  07BD  07F9               	addwf	___lmul@product,f
   463  07BE  0875               	movf	___lmul@multiplicand+1,w
   464  07BF  1103               	clrz
   465  07C0  1803               	skipnc
   466  07C1  3E01               	addlw	1
   467  07C2  1903               	skipnz
   468  07C3  2FC5               	goto	u81
   469  07C4  07FA               	addwf	___lmul@product+1,f
   470  07C5                     u81:	
   471  07C5  0876               	movf	___lmul@multiplicand+2,w
   472  07C6  1103               	clrz
   473  07C7  1803               	skipnc
   474  07C8  3E01               	addlw	1
   475  07C9  1903               	skipnz
   476  07CA  2FCC               	goto	u82
   477  07CB  07FB               	addwf	___lmul@product+2,f
   478  07CC                     u82:	
   479  07CC  0877               	movf	___lmul@multiplicand+3,w
   480  07CD  1103               	clrz
   481  07CE  1803               	skipnc
   482  07CF  3E01               	addlw	1
   483  07D0  1903               	skipnz
   484  07D1  2FD3               	goto	u83
   485  07D2  07FC               	addwf	___lmul@product+3,f
   486  07D3                     u83:	
   487  07D3                     l660:	
   488  07D3  3001               	movlw	1
   489  07D4  00F8               	movwf	??___lmul
   490  07D5                     u95:	
   491  07D5  1003               	clrc
   492  07D6  0DF4               	rlf	___lmul@multiplicand,f
   493  07D7  0DF5               	rlf	___lmul@multiplicand+1,f
   494  07D8  0DF6               	rlf	___lmul@multiplicand+2,f
   495  07D9  0DF7               	rlf	___lmul@multiplicand+3,f
   496  07DA  0BF8               	decfsz	??___lmul,f
   497  07DB  2FD5               	goto	u95
   498  07DC                     l662:	
   499  07DC  3001               	movlw	1
   500  07DD                     u105:	
   501  07DD  1003               	clrc
   502  07DE  0CF3               	rrf	___lmul@multiplier+3,f
   503  07DF  0CF2               	rrf	___lmul@multiplier+2,f
   504  07E0  0CF1               	rrf	___lmul@multiplier+1,f
   505  07E1  0CF0               	rrf	___lmul@multiplier,f
   506  07E2  3EFF               	addlw	-1
   507  07E3  1D03               	skipz
   508  07E4  2FDD               	goto	u105
   509  07E5  0873               	movf	___lmul@multiplier+3,w
   510  07E6  0472               	iorwf	___lmul@multiplier+2,w
   511  07E7  0471               	iorwf	___lmul@multiplier+1,w
   512  07E8  0470               	iorwf	___lmul@multiplier,w
   513  07E9  1D03               	skipz
   514  07EA  2FEC               	goto	u111
   515  07EB  2FED               	goto	u110
   516  07EC                     u111:	
   517  07EC  2FB8               	goto	l656
   518  07ED                     u110:	
   519  07ED                     l664:	
   520  07ED  087C               	movf	___lmul@product+3,w
   521  07EE  00F3               	movwf	?___lmul+3
   522  07EF  087B               	movf	___lmul@product+2,w
   523  07F0  00F2               	movwf	?___lmul+2
   524  07F1  087A               	movf	___lmul@product+1,w
   525  07F2  00F1               	movwf	?___lmul+1
   526  07F3  0879               	movf	___lmul@product,w
   527  07F4  00F0               	movwf	?___lmul
   528  07F5                     l120:	
   529  07F5  0008               	return
   530  07F6                     __end_of___lmul:	
   531  007E                     btemp	set	126	;btemp
   532  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     10      16
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     244
                                              7 BANK0      3     3      0
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _rand
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      10       3       20.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      10        0.0%
ABS                  0      0      1D       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 13 12:00:41 2019

            __CFG_CP$OFF 0000                       u70 07BC                       u71 07BB  
                     u81 07C5                       u82 07CC                       u83 07D3  
                     u95 07D5              __CFG_LVP$ON 0000                      l120 07F5  
                    l660 07D3                      l556 07AF                      l662 07DC  
                    l654 07B0                      l670 078A                      l664 07ED  
                    l656 07B8                      l672 0798                      l680 0750  
                    l658 07BC                      l682 0753                      l668 076D  
                    l684 075A                      l676 0749                      l686 075C  
                    l678 074D                      u110 07ED                      u111 07EC  
                    u120 07A7                      u105 07DD                      u125 07A2  
                    u137 0764             __CFG_CPD$OFF 0000             __CFG_WDTE$ON 0000  
                   _main 0749                     _rand 076D                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070                    ?_rand 0020                    _CMCON 001F  
                  _PORTB 0006                    _TRISB 0086      ___lmul@multiplicand 0074  
                  _randx 002A                    status 0003                    wtemp0 007E  
        __initialization 07F6             __end_of_main 076D             __end_of_rand 07B0  
                 ??_main 0027                   ??_rand 0022           __CFG_PWRTE$OFF 0000  
                 ___lmul 07B0  __end_of__initialization 07FE           __pcstackCOMMON 0070  
           __pidataBANK0 0745               __pmaintext 0749                  ?___lmul 0070  
         ___lmul@product 0079          __size_of___lmul 0046                  __ptext1 076D  
                __ptext2 07B0                  _numbers 002E     end_of_initialization 07FE  
         __end_of___lmul 07F6      start_initialization 07F6                 ??___lmul 0078  
            __pdataBANK0 002A                ___latbits 0000            __pcstackBANK0 0020  
              __pnvBANK0 002E        ___lmul@multiplier 0070            __size_of_main 0024  
          __size_of_rand 0043       __CFG_FOSC$EXTRCCLK 0000  
