

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 18 08:21:06 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F628A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  0092                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009F                     	;# 
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  008C                     	;# 
   114  008E                     	;# 
   115  0092                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009F                     	;# 
   123                           
   124                           	psect	idataBANK0
   125  0703                     __pidataBANK0:	
   126                           
   127                           ;initializer for _randx
   128  0703  3401               	retlw	1
   129  0704  3400               	retlw	0
   130  0705  3400               	retlw	0
   131  0706  3400               	retlw	0
   132                           
   133                           	psect	nvBANK0
   134  002E                     __pnvBANK0:	
   135  002E                     _numbers:	
   136  002E                     	ds	2
   137  0005                     _PORTAbits	set	5
   138  0006                     _PORTB	set	6
   139  0005                     _PORTA	set	5
   140  001F                     _CMCON	set	31
   141  0086                     _TRISB	set	134
   142  0085                     _TRISA	set	133
   143                           
   144                           ; #config settings
   145  0000                     
   146                           	psect	cinit
   147  07F6                     start_initialization:	
   148  07F6                     __initialization:	
   149                           
   150                           ; Initialize objects allocated to BANK0
   151  07F6  2703               	fcall	__pidataBANK0	;fetch initializer
   152  07F7  00AA               	movwf	__pdataBANK0& (0+127)
   153  07F8  2704               	fcall	__pidataBANK0+1	;fetch initializer
   154  07F9  00AB               	movwf	(__pdataBANK0+1)& (0+127)
   155  07FA  2705               	fcall	__pidataBANK0+2	;fetch initializer
   156  07FB  00AC               	movwf	(__pdataBANK0+2)& (0+127)
   157  07FC  2706               	fcall	__pidataBANK0+3	;fetch initializer
   158  07FD  00AD               	movwf	(__pdataBANK0+3)& (0+127)
   159  07FE                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  07FE                     __end_of__initialization:	
   163  07FE  0183               	clrf	3
   164  07FF  2F90               	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	dataBANK0
   167  002A                     __pdataBANK0:	
   168  002A                     _randx:	
   169  002A                     	ds	4
   170                           
   171                           	psect	cstackCOMMON
   172  0070                     __pcstackCOMMON:	
   173  0070                     ?_main:	
   174  0070                     ?___lmul:	
   175                           ; 1 bytes @ 0x0
   176                           
   177  0070                     ___lmul@multiplier:	
   178                           ; 4 bytes @ 0x0
   179                           
   180                           
   181                           ; 4 bytes @ 0x0
   182  0070                     	ds	4
   183  0074                     ___lmul@multiplicand:	
   184                           
   185                           ; 4 bytes @ 0x4
   186  0074                     	ds	4
   187  0078                     ??___lmul:	
   188                           
   189                           ; 1 bytes @ 0x8
   190  0078                     	ds	1
   191  0079                     ___lmul@product:	
   192                           
   193                           ; 4 bytes @ 0x9
   194  0079                     	ds	4
   195                           
   196                           	psect	cstackBANK0
   197  0020                     __pcstackBANK0:	
   198  0020                     ?_rand:	
   199                           
   200                           ; 2 bytes @ 0x0
   201  0020                     	ds	2
   202  0022                     ??_rand:	
   203                           
   204                           ; 1 bytes @ 0x2
   205  0022                     	ds	5
   206  0027                     ??_main:	
   207                           
   208                           ; 1 bytes @ 0x7
   209  0027                     	ds	3
   210                           
   211                           	psect	maintext
   212  0790                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 30 in file "A9.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, pclath, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   232 ;;      Params:         0       0       0       0
   233 ;;      Locals:         0       0       0       0
   234 ;;      Temps:          0       3       0       0
   235 ;;      Totals:         0       3       0       0
   236 ;;Total ram usage:        3 bytes
   237 ;; Hardware stack levels required when called:    2
   238 ;; This function calls:
   239 ;;		_rand
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _main
   247  0790                     _main:	
   248  0790                     l704:	
   249                           ;incstack = 0
   250                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   251                           
   252                           
   253                           ;A9.c: 31: 
   254  0790  3007               	movlw	7
   255  0791  1283               	bcf	3,5	;RP0=0, select bank0
   256  0792  1303               	bcf	3,6	;RP1=0, select bank0
   257  0793  009F               	movwf	31	;volatile
   258                           
   259                           ;A9.c: 33: }
   260  0794  3003               	movlw	3
   261  0795  1683               	bsf	3,5	;RP0=1, select bank1
   262  0796  1303               	bcf	3,6	;RP1=0, select bank1
   263  0797  0085               	movwf	5	;volatile
   264  0798                     l706:	
   265  0798  0186               	clrf	6	;volatile
   266  0799                     l708:	
   267  0799  3003               	movlw	3
   268  079A  1283               	bcf	3,5	;RP0=0, select bank0
   269  079B  1303               	bcf	3,6	;RP1=0, select bank0
   270  079C  0085               	movwf	5	;volatile
   271  079D  0186               	clrf	6	;volatile
   272  079E                     l710:	
   273  079E  2707               	fcall	_rand
   274  079F  1283               	bcf	3,5	;RP0=0, select bank0
   275  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   276  07A1  0821               	movf	?_rand+1,w
   277  07A2  00AF               	movwf	_numbers+1
   278  07A3  0820               	movf	?_rand,w
   279  07A4  00AE               	movwf	_numbers
   280  07A5                     l712:	
   281  07A5  0C2E               	rrf	_numbers,w
   282  07A6  1C03               	skipc
   283  07A7  1105               	bcf	5,2	;volatile
   284  07A8  1803               	skipnc
   285  07A9  1505               	bsf	5,2	;volatile
   286  07AA                     l714:	
   287  07AA  1003               	clrc
   288  07AB  1D85               	btfss	5,3	;volatile
   289  07AC  1403               	setc
   290  07AD  1803               	btfsc	3,0
   291  07AE  2FB0               	goto	u191
   292  07AF  2FB4               	goto	u190
   293  07B0                     u191:	
   294  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   295  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   296  07B2  1585               	bsf	5,3	;volatile
   297  07B3  2FB7               	goto	u204
   298  07B4                     u190:	
   299  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   300  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   301  07B6  1185               	bcf	5,3	;volatile
   302  07B7                     u204:	
   303  07B7  2FC8               	goto	l720
   304  07B8                     l25:	
   305  07B8  1805               	btfsc	5,0	;volatile
   306  07B9  2FBB               	goto	u211
   307  07BA  2FBC               	goto	u210
   308  07BB                     u211:	
   309  07BB  2FBD               	goto	l718
   310  07BC                     u210:	
   311  07BC                     l716:	
   312  07BC  1105               	bcf	5,2	;volatile
   313  07BD                     l718:	
   314  07BD  305B               	movlw	91
   315  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   316  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   317  07C0  00A8               	movwf	??_main+1
   318  07C1  30E7               	movlw	231
   319  07C2  00A7               	movwf	??_main
   320  07C3                     u257:	
   321  07C3  0BA7               	decfsz	??_main,f
   322  07C4  2FC3               	goto	u257
   323  07C5  0BA8               	decfsz	??_main+1,f
   324  07C6  2FC3               	goto	u257
   325  07C7  0000               	nop
   326  07C8                     l720:	
   327  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   328  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   329  07CA  1905               	btfsc	5,2	;volatile
   330  07CB  2FCD               	goto	u221
   331  07CC  2FCE               	goto	u220
   332  07CD                     u221:	
   333  07CD  2FB8               	goto	l25
   334  07CE                     u220:	
   335  07CE  2FDF               	goto	l726
   336  07CF                     l29:	
   337  07CF  1885               	btfsc	5,1	;volatile
   338  07D0  2FD2               	goto	u231
   339  07D1  2FD3               	goto	u230
   340  07D2                     u231:	
   341  07D2  2FD4               	goto	l724
   342  07D3                     u230:	
   343  07D3                     l722:	
   344  07D3  1185               	bcf	5,3	;volatile
   345  07D4                     l724:	
   346  07D4  305B               	movlw	91
   347  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   348  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   349  07D7  00A8               	movwf	??_main+1
   350  07D8  30E7               	movlw	231
   351  07D9  00A7               	movwf	??_main
   352  07DA                     u267:	
   353  07DA  0BA7               	decfsz	??_main,f
   354  07DB  2FDA               	goto	u267
   355  07DC  0BA8               	decfsz	??_main+1,f
   356  07DD  2FDA               	goto	u267
   357  07DE  0000               	nop
   358  07DF                     l726:	
   359  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   360  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   361  07E1  1985               	btfsc	5,3	;volatile
   362  07E2  2FE4               	goto	u241
   363  07E3  2FE5               	goto	u240
   364  07E4                     u241:	
   365  07E4  2FCF               	goto	l29
   366  07E5                     u240:	
   367  07E5                     l728:	
   368  07E5  3003               	movlw	3
   369  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   370  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   371  07E8  00A9               	movwf	??_main+2
   372  07E9  308A               	movlw	138
   373  07EA  00A8               	movwf	??_main+1
   374  07EB  3055               	movlw	85
   375  07EC  00A7               	movwf	??_main
   376  07ED                     u277:	
   377  07ED  0BA7               	decfsz	??_main,f
   378  07EE  2FED               	goto	u277
   379  07EF  0BA8               	decfsz	??_main+1,f
   380  07F0  2FED               	goto	u277
   381  07F1  0BA9               	decfsz	??_main+2,f
   382  07F2  2FED               	goto	u277
   383  07F3  0000               	nop
   384  07F4  2F9E               	goto	l710
   385  07F5  2800               	ljmp	start
   386  07F6                     __end_of_main:	
   387                           
   388                           	psect	text1
   389  0707                     __ptext1:	
   390 ;; *************** function _rand *****************
   391 ;; Defined at:
   392 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  2    0[BANK0 ] int 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   406 ;;      Params:         0       2       0       0
   407 ;;      Locals:         0       0       0       0
   408 ;;      Temps:          0       5       0       0
   409 ;;      Totals:         0       7       0       0
   410 ;;Total ram usage:        7 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; Hardware stack levels required when called:    1
   413 ;; This function calls:
   414 ;;		___lmul
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _rand
   422  0707                     _rand:	
   423  0707                     l696:	
   424                           ;incstack = 0
   425                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
   426                           
   427  0707  1283               	bcf	3,5	;RP0=0, select bank0
   428  0708  1303               	bcf	3,6	;RP1=0, select bank0
   429  0709  082D               	movf	_randx+3,w
   430  070A  00F3               	movwf	___lmul@multiplier+3
   431  070B  082C               	movf	_randx+2,w
   432  070C  00F2               	movwf	___lmul@multiplier+2
   433  070D  082B               	movf	_randx+1,w
   434  070E  00F1               	movwf	___lmul@multiplier+1
   435  070F  082A               	movf	_randx,w
   436  0710  00F0               	movwf	___lmul@multiplier
   437  0711  3041               	movlw	65
   438  0712  00F7               	movwf	___lmul@multiplicand+3
   439  0713  30C6               	movlw	198
   440  0714  00F6               	movwf	___lmul@multiplicand+2
   441  0715  304E               	movlw	78
   442  0716  00F5               	movwf	___lmul@multiplicand+1
   443  0717  306D               	movlw	109
   444  0718  00F4               	movwf	___lmul@multiplicand
   445  0719  274A               	fcall	___lmul
   446  071A  0873               	movf	?___lmul+3,w
   447  071B  1283               	bcf	3,5	;RP0=0, select bank0
   448  071C  1303               	bcf	3,6	;RP1=0, select bank0
   449  071D  00AD               	movwf	_randx+3
   450  071E  0872               	movf	?___lmul+2,w
   451  071F  00AC               	movwf	_randx+2
   452  0720  0871               	movf	?___lmul+1,w
   453  0721  00AB               	movwf	_randx+1
   454  0722  0870               	movf	?___lmul,w
   455  0723  00AA               	movwf	_randx
   456  0724                     l698:	
   457  0724  3039               	movlw	57
   458  0725  07AA               	addwf	_randx,f
   459  0726  3030               	movlw	48
   460  0727  1803               	skipnc
   461  0728  3031               	movlw	49
   462  0729  07AB               	addwf	_randx+1,f
   463  072A  3000               	movlw	0
   464  072B  1803               	skipnc
   465  072C  3001               	movlw	1
   466  072D  07AC               	addwf	_randx+2,f
   467  072E  3000               	movlw	0
   468  072F  1803               	skipnc
   469  0730  3001               	movlw	1
   470  0731  07AD               	addwf	_randx+3,f
   471  0732                     l700:	
   472  0732  082A               	movf	_randx,w
   473  0733  00A2               	movwf	??_rand
   474  0734  082B               	movf	_randx+1,w
   475  0735  00A3               	movwf	??_rand+1
   476  0736  082C               	movf	_randx+2,w
   477  0737  00A4               	movwf	??_rand+2
   478  0738  082D               	movf	_randx+3,w
   479  0739  00A5               	movwf	??_rand+3
   480  073A  3010               	movlw	16
   481  073B  00A6               	movwf	??_rand+4
   482  073C                     u185:	
   483  073C  0D25               	rlf	??_rand+3,w
   484  073D  0CA5               	rrf	??_rand+3,f
   485  073E  0CA4               	rrf	??_rand+2,f
   486  073F  0CA3               	rrf	??_rand+1,f
   487  0740  0CA2               	rrf	??_rand,f
   488  0741                     u180:	
   489  0741  0BA6               	decfsz	??_rand+4,f
   490  0742  2F3C               	goto	u185
   491  0743  30FF               	movlw	255
   492  0744  0522               	andwf	??_rand,w
   493  0745  00A0               	movwf	?_rand
   494  0746  307F               	movlw	127
   495  0747  0523               	andwf	??_rand+1,w
   496  0748  00A1               	movwf	?_rand+1
   497  0749                     l570:	
   498  0749  0008               	return
   499  074A                     __end_of_rand:	
   500                           
   501                           	psect	text2
   502  074A                     __ptext2:	
   503 ;; *************** function ___lmul *****************
   504 ;; Defined at:
   505 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  multiplier      4    0[COMMON] unsigned long 
   508 ;;  multiplicand    4    4[COMMON] unsigned long 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  product         4    9[COMMON] unsigned long 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  4    0[COMMON] unsigned long 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   520 ;;      Params:         8       0       0       0
   521 ;;      Locals:         4       0       0       0
   522 ;;      Temps:          1       0       0       0
   523 ;;      Totals:        13       0       0       0
   524 ;;Total ram usage:       13 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_rand
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function ___lmul
   535  074A                     ___lmul:	
   536  074A                     l682:	
   537                           ;incstack = 0
   538                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   539                           
   540  074A  3000               	movlw	0
   541  074B  00FC               	movwf	___lmul@product+3
   542  074C  3000               	movlw	0
   543  074D  00FB               	movwf	___lmul@product+2
   544  074E  3000               	movlw	0
   545  074F  00FA               	movwf	___lmul@product+1
   546  0750  3000               	movlw	0
   547  0751  00F9               	movwf	___lmul@product
   548  0752                     l684:	
   549  0752  1C70               	btfss	___lmul@multiplier,0
   550  0753  2F55               	goto	u131
   551  0754  2F56               	goto	u130
   552  0755                     u131:	
   553  0755  2F6D               	goto	l688
   554  0756                     u130:	
   555  0756                     l686:	
   556  0756  0874               	movf	___lmul@multiplicand,w
   557  0757  07F9               	addwf	___lmul@product,f
   558  0758  0875               	movf	___lmul@multiplicand+1,w
   559  0759  1103               	clrz
   560  075A  1803               	skipnc
   561  075B  3E01               	addlw	1
   562  075C  1903               	skipnz
   563  075D  2F5F               	goto	u141
   564  075E  07FA               	addwf	___lmul@product+1,f
   565  075F                     u141:	
   566  075F  0876               	movf	___lmul@multiplicand+2,w
   567  0760  1103               	clrz
   568  0761  1803               	skipnc
   569  0762  3E01               	addlw	1
   570  0763  1903               	skipnz
   571  0764  2F66               	goto	u142
   572  0765  07FB               	addwf	___lmul@product+2,f
   573  0766                     u142:	
   574  0766  0877               	movf	___lmul@multiplicand+3,w
   575  0767  1103               	clrz
   576  0768  1803               	skipnc
   577  0769  3E01               	addlw	1
   578  076A  1903               	skipnz
   579  076B  2F6D               	goto	u143
   580  076C  07FC               	addwf	___lmul@product+3,f
   581  076D                     u143:	
   582  076D                     l688:	
   583  076D  3001               	movlw	1
   584  076E  00F8               	movwf	??___lmul
   585  076F                     u155:	
   586  076F  1003               	clrc
   587  0770  0DF4               	rlf	___lmul@multiplicand,f
   588  0771  0DF5               	rlf	___lmul@multiplicand+1,f
   589  0772  0DF6               	rlf	___lmul@multiplicand+2,f
   590  0773  0DF7               	rlf	___lmul@multiplicand+3,f
   591  0774  0BF8               	decfsz	??___lmul,f
   592  0775  2F6F               	goto	u155
   593  0776                     l690:	
   594  0776  3001               	movlw	1
   595  0777                     u165:	
   596  0777  1003               	clrc
   597  0778  0CF3               	rrf	___lmul@multiplier+3,f
   598  0779  0CF2               	rrf	___lmul@multiplier+2,f
   599  077A  0CF1               	rrf	___lmul@multiplier+1,f
   600  077B  0CF0               	rrf	___lmul@multiplier,f
   601  077C  3EFF               	addlw	-1
   602  077D  1D03               	skipz
   603  077E  2F77               	goto	u165
   604  077F  0873               	movf	___lmul@multiplier+3,w
   605  0780  0472               	iorwf	___lmul@multiplier+2,w
   606  0781  0471               	iorwf	___lmul@multiplier+1,w
   607  0782  0470               	iorwf	___lmul@multiplier,w
   608  0783  1D03               	skipz
   609  0784  2F86               	goto	u171
   610  0785  2F87               	goto	u170
   611  0786                     u171:	
   612  0786  2F52               	goto	l684
   613  0787                     u170:	
   614  0787                     l692:	
   615  0787  087C               	movf	___lmul@product+3,w
   616  0788  00F3               	movwf	?___lmul+3
   617  0789  087B               	movf	___lmul@product+2,w
   618  078A  00F2               	movwf	?___lmul+2
   619  078B  087A               	movf	___lmul@product+1,w
   620  078C  00F1               	movwf	?___lmul+1
   621  078D  0879               	movf	___lmul@product,w
   622  078E  00F0               	movwf	?___lmul
   623  078F                     l134:	
   624  078F  0008               	return
   625  0790                     __end_of___lmul:	
   626  007E                     btemp	set	126	;btemp
   627  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     10      16
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     244
                                              7 BANK0      3     3      0
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _rand
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      10       3       20.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      10        0.0%
ABS                  0      0      1D       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 18 08:21:06 2019

            __CFG_CP$OFF 0000                       l25 07B8                       l29 07CF  
            __CFG_LVP$ON 0000                      l134 078F                      l700 0732  
                    l710 079E                      l720 07C8                      l712 07A5  
                    l704 0790                      l570 0749                      l722 07D3  
                    l714 07AA                      l706 0798                      l724 07D4  
                    l716 07BC                      l708 0799                      l726 07DF  
                    l718 07BD                      l728 07E5                      l690 0776  
                    l682 074A                      l692 0787                      l684 0752  
                    l686 0756                      l688 076D                      l696 0707  
                    l698 0724                      u130 0756                      u210 07BC  
                    u131 0755                      u211 07BB                      u220 07CE  
                    u204 07B7                      u141 075F                      u221 07CD  
                    u142 0766                      u230 07D3                      u143 076D  
                    u231 07D2                      u240 07E5                      u241 07E4  
                    u170 0787                      u171 0786                      u155 076F  
                    u180 0741                      u165 0777                      u190 07B4  
                    u191 07B0                      u185 073C                      u257 07C3  
           __CFG_CPD$OFF 0000                      u267 07DA                      u277 07ED  
                   _main 0790                     _rand 0707                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070                    ?_rand 0020            __CFG_WDTE$OFF 0000  
                  _CMCON 001F                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086      ___lmul@multiplicand 0074  
                  _randx 002A                    status 0003                    wtemp0 007E  
        __initialization 07F6             __end_of_main 07F6             __end_of_rand 074A  
                 ??_main 0027                   ??_rand 0022           __CFG_PWRTE$OFF 0000  
                 ___lmul 074A  __end_of__initialization 07FE           __pcstackCOMMON 0070  
           __pidataBANK0 0703               __pmaintext 0790                  ?___lmul 0070  
         ___lmul@product 0079          __size_of___lmul 0046                  __ptext1 0707  
                __ptext2 074A                  _numbers 002E     end_of_initialization 07FE  
              _PORTAbits 0005           __end_of___lmul 0790      start_initialization 07F6  
               ??___lmul 0078              __pdataBANK0 002A                ___latbits 0000  
          __pcstackBANK0 0020                __pnvBANK0 002E        ___lmul@multiplier 0070  
          __size_of_main 0066            __size_of_rand 0043       __CFG_FOSC$EXTRCCLK 0000  
